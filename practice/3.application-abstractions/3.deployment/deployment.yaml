---
# file: practice/2.application-abstractions/3.deployment/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - image: quay.io/testing-farm/nginx:1.12
        name: nginx
        ports:
        - containerPort: 80
...


# Здесь все как у replicaset за исключением KIND тут указываем Deployment
# Также чтоб обновить/отредактировать данный деплоймент 
# нужно выполнить команду 
# kubectl edit deployment my-deployment
# где 
# deployment это то что мы хотим отредактировать 
# my-deployment это имя необходимого контейнера, после выполнения данной команды откроется локальный редактор который сразу даст возможность отредактировать нужный нам пункт
# и после сохранения и выхода из файла изменения автоматическим применяться лучше использовать только для локального тестирования не использовать в продакшене!!!!!!
#  Есть инструменты которые помогают провести обновление контенеров без простоя, для этого нам необходимо в файле
# в первой spec указать тип стратегии при обновлении, основная стратегия это rollingUpdate в ней есть два параметра
# maxSurge = данный параметр говорить о том на какое кол-во мы можем увеличить наши реплики, можно указывать числом или процентом
# maxUnavailable = данный параметр говорит о том что сколько контейнеров может быть не доступно, можно указывать числом или процентом